#################################################
# Package Domofon
#################################################

domofon_pack:

  automation:

    - alias: Domofon - Opened by Button Notification
      id: cb5e25c1-dcb7-4b75-a6c4-6b12eb84f86b
      initial_state: true
      trigger:
        platform: state
        entity_id: binary_sensor.domofon_button
        to: 'on'
      condition:
        - condition: state
          entity_id: binary_sensor.domofon_incoming_call
          state: 'on'
      action:
        service: notify.vitaly
        data:
          message: "Домофон открыт кнопкой"

    - alias: Domofon - Incoming Call Notification
      id: 741a9858-1687-4b2d-8afd-73373e8cc8ba
      initial_state: true
      trigger:
        platform: state
        entity_id: binary_sensor.domofon_incoming_call
        to: 'on'
      action:
        service: notify.vitaly
        data:
          message: "Звонок в домофон {% if is_state('switch.domofon_automatically_open', 'on') or is_state('switch.domofon_automatically_open_once', 'on') %}(откроется автоматически){% endif %}"
          data:
            inline_keyboard:
              - "{{ '-' if is_state('switch.domofon_automatically_open', 'on') or is_state('switch.domofon_automatically_open_once', 'on') else 'Открыть:/domofon_open, Отклонить:/domofon_reject' }}"

    - alias: Domofon - Telegram Control - domofon_open
      id: 99d5c580-c382-48b3-bd2d-f6eb00b62c31
      initial_state: true
      trigger:
        platform: event
        event_type: telegram_callback
        event_data:
          data: '/domofon_open'
      action:
        - service: telegram_bot.answer_callback_query
          data:
            callback_query_id: "{{ trigger.event.data.id }}"
            message: "{{ 'Открываю...' if is_state('binary_sensor.domofon_incoming_call', 'on') else 'Нет входящего звонка' }}"
        - service: esphome.domofon_accept_call

    - alias: Domofon - Telegram Control - domofon_reject
      id: a50fb75b-0083-4866-8496-bdd013332a88
      initial_state: true
      trigger:
        platform: event
        event_type: telegram_callback
        event_data:
          data: '/domofon_reject'
      action:
        - service: telegram_bot.answer_callback_query
          data:
            callback_query_id: "{{ trigger.event.data.id }}"
            message: "{{ 'Отклоняю...' if is_state('binary_sensor.domofon_incoming_call', 'on') else 'Нет входящего звонка' }}"
        - service: esphome.domofon_reject_call

    - alias: Domofon - Mute and UnMute by Time
      id: 97a74c5f-6a9f-4af6-9f8e-2a7fcd0a5070
      trigger:
        - platform: time
          at: "23:00:00"
        - platform: time
          at: "07:00:00"
      action:
        - service: >-
            {% if trigger.now.hour == 23 -%}
              switch.turn_on
            {% elif trigger.now.hour == 7 -%}
              switch.turn_off
            {% endif %}
          data:
            entity_id: switch.domofon_mute_sound

    - alias: Domofon - ESP Board Lost Connection
      id: 6cac01e7-945c-4f37-8b2d-d75e03107d76
      trigger:
        - platform: state
          entity_id: binary_sensor.domofon_status
      action:
        - service: notify.vitaly
          data:
            message: |
              *Внимание!*
              {% if trigger.to_state.state == 'off' -%}
                Домофон: потеряно подключение к HA.
              {% elif trigger.to_state.state == 'on' -%}
                Домофон: восстановлено подключение к HA
              {% endif %}

    # - alias: Domofon - Open Once for Couriers
    #   id: c916925d-cd33-4f30-882b-4049e52acf12
    #   trigger:
    #     - platform: state
    #       entity_id:
    #         - sensor.kb2003_poslednee_uvedomlenie
    #         - sensor.mi_8_poslednee_uvedomlenie
    #   condition:
    #     condition: or
    #     conditions:
    #       - condition: template
    #         value_template: >-
    #           {{ trigger.to_state.state | regex_search('Курьер .* будет у вас в течение .*') }}
    #       - condition: template
    #         value_template: >-
    #           {{ trigger.to_state.state | regex_search('Уже спешит к вам') }}
    #       - condition: template
    #         value_template: >-
    #           {{ trigger.to_state.state | regex_search('Будет через *.') }}
    #   action:
    #     - service: switch.turn_on
    #       data:
    #         entity_id: switch.domofon_automatically_open_once
    #     - service: notify.vitaly
    #       data:
    #         message: "Курьер уже в пути, для домофона включен режим однократного авто-открытия."

    - alias: Domofon - Open Once at Enter to Home Zone
      id: 40d4a1f6-576c-438a-b20f-ba161d9bd3ee
      trigger: 
        - platform: zone
          entity_id:
            - person.hass
            - person.inna
            - person.alisa
          zone: zone.domofon
          event: enter
      action:
        - service: switch.turn_on
          data:
            entity_id: switch.domofon_automatically_open_once
        - service: switch.turn_on
          data:
            entity_id: switch.domofon_mute_sound_once
        - service: notify.vitaly
          data:
            message: "_Домофон_: включен режим однократного авто-открытия."
        - wait_for_trigger:
          - platform: state
            entity_id: binary_sensor.0x158d00031c790f_contact
            to: 'on'
          timeout: "00:10:00"
        - choose:
          - conditions: >-
              {{ is_state('switch.domofon_automatically_open_once', 'on') }}
            sequence:
              - service: switch.turn_off
                data:
                  entity_id: switch.domofon_automatically_open_once
              - service: switch.turn_off
                data:
                  entity_id: switch.domofon_mute_sound_once
              - service: notify.vitaly
                data:
                  message: "_Домофон_: отключен режим однократного авто-открытия."